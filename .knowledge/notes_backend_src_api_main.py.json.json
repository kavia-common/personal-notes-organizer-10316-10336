{"is_source_file": true, "format": "Python", "description": "This file defines a FastAPI application for managing personal notes, including database models, endpoints for CRUD operations, environment configuration, and middleware setup.", "external_files": [".env", "dotenv", "fastapi", "pydantic", "sqlalchemy", "starlette", "os"], "external_methods": ["load_dotenv()", "create_engine()", "sessionmaker()", "Base.metadata.create_all()", "app.add_middleware()", "Depends()", "HTTPException()"], "published": ["health_check", "create_note", "list_notes", "get_note", "update_note", "delete_note", "get_db"], "classes": [{"name": "NoteORM", "description": "SQLAlchemy ORM model representing the 'notes' database table."}, {"name": "NoteBase", "description": "Pydantic model for basic note data shared between create/update operations."}, {"name": "NoteCreate", "description": "Pydantic model for creating a new note."}, {"name": "NoteUpdate", "description": "Pydantic model for updating an existing note."}, {"name": "NoteOut", "description": "Pydantic model for outputting note data, includes serialization from ORM."}], "methods": [{"name": "health_check()", "description": "Checks the health status of the API and returns a simple JSON message.", "scope": "", "scopeKind": ""}, {"name": "NoteOut create_note(payload: NoteCreate, db: Session = Depends(get_db))", "description": "Creates a new note in the database, returning its details.", "scope": "", "scopeKind": ""}, {"name": "List[NoteOut] list_notes( db: Session = Depends(get_db), q: Optional[str] = Query(default=None, description=\"Search by title/content substring\"), tag: Optional[str] = Query(default=None, description=\"Filter by a single tag\"), skip: int = Query(default=0, ge=0, description=\"Pagination offset\"), limit: int = Query(default=50, ge=1, le=200, description=\"Pagination limit\"), )", "description": "Retrieves a list of notes with optional search, filtering, and pagination.", "scope": "", "scopeKind": ""}, {"name": "NoteOut get_note( note_id: int = Path(..., ge=1, description=\"Note ID\"), db: Session = Depends(get_db), )", "description": "Fetches a single note by its ID.", "scope": "", "scopeKind": ""}, {"name": "NoteOut update_note( note_id: int = Path(..., ge=1, description=\"Note ID\"), payload: NoteUpdate = ..., db: Session = Depends(get_db), )", "description": "Updates specified fields of an existing note.", "scope": "", "scopeKind": ""}, {"name": "delete_note( note_id: int = Path(..., ge=1, description=\"Note ID\"), db: Session = Depends(get_db), )", "description": "Deletes a note by its ID.", "scope": "", "scopeKind": ""}, {"name": "get_db()", "description": "Provides a scoped database session for requests.", "scope": "", "scopeKind": ""}, {"name": "\"NoteOut\" from_orm_note(cls, orm: NoteORM)", "scope": "NoteOut", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[List[str]] from_tags_str(tags_str: Optional[str])", "scope": "NoteBase", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] to_tags_str(self)", "scope": "NoteBase", "scopeKind": "class", "description": "unavailable"}], "calls": ["load_dotenv()", "create_engine()", "sessionmaker()", "Base.metadata.create_all()", "app.add_middleware()", "Depends()", "HTTPException()"], "search-terms": ["FastAPI notes API", "SQLAlchemy ORM notes", "CRUD endpoints for notes", "Note models Pydantic", "environment variable database URL", "CORS middleware configuration", "get_db dependency"], "state": 2, "file_id": 3, "knowledge_revision": 10, "git_revision": "497e78daaca1590a7af5923cdb92d1dd0c7c31d1", "revision_history": [{"9": "497e78daaca1590a7af5923cdb92d1dd0c7c31d1"}, {"10": "497e78daaca1590a7af5923cdb92d1dd0c7c31d1"}], "ctags": [{"_type": "tag", "name": "Base", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-10316-10336/notes_backend/src/api/main.py", "pattern": "/^Base = declarative_base()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "DB_URL", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-10316-10336/notes_backend/src/api/main.py", "pattern": "/^DB_URL = os.getenv(\"NOTES_DB_URL\") or os.getenv(\"DATABASE_URL\") or \"sqlite:\\/\\/\\/.\\/notes.db\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "NoteBase", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-10316-10336/notes_backend/src/api/main.py", "pattern": "/^class NoteBase(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NoteCreate", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-10316-10336/notes_backend/src/api/main.py", "pattern": "/^class NoteCreate(NoteBase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NoteORM", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-10316-10336/notes_backend/src/api/main.py", "pattern": "/^class NoteORM(Base):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NoteOut", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-10316-10336/notes_backend/src/api/main.py", "pattern": "/^class NoteOut(NoteBase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NoteUpdate", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-10316-10336/notes_backend/src/api/main.py", "pattern": "/^class NoteUpdate(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "SessionLocal", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-10316-10336/notes_backend/src/api/main.py", "pattern": "/^SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine, future=True)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "__tablename__", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-10316-10336/notes_backend/src/api/main.py", "pattern": "/^    __tablename__ = \"notes\"$/", "file": true, "language": "Python", "kind": "variable", "scope": "NoteORM", "scopeKind": "class"}, {"_type": "tag", "name": "allowed_origins", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-10316-10336/notes_backend/src/api/main.py", "pattern": "/^allowed_origins = [o.strip() for o in (os.getenv(\"CORS_ALLOW_ORIGINS\") or \"*\").split(\",\")]$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-10316-10336/notes_backend/src/api/main.py", "pattern": "/^app = FastAPI($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "content", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-10316-10336/notes_backend/src/api/main.py", "pattern": "/^    content = Column(Text, nullable=False, default=\"\")$/", "language": "Python", "kind": "variable", "scope": "NoteORM", "scopeKind": "class"}, {"_type": "tag", "name": "content", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-10316-10336/notes_backend/src/api/main.py", "pattern": "/^    content: Optional[str] = Field(None, description=\"New content\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "NoteUpdate", "scopeKind": "class"}, {"_type": "tag", "name": "content", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-10316-10336/notes_backend/src/api/main.py", "pattern": "/^    content: str = Field(\"\", description=\"Content\\/body of the note\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "NoteBase", "scopeKind": "class"}, {"_type": "tag", "name": "create_note", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-10316-10336/notes_backend/src/api/main.py", "pattern": "/^def create_note(payload: NoteCreate, db: Session = Depends(get_db)) -> NoteOut:$/", "language": "Python", "typeref": "typename:NoteOut", "kind": "function", "signature": "(payload: NoteCreate, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "created_at", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-10316-10336/notes_backend/src/api/main.py", "pattern": "/^    created_at = Column(DateTime(timezone=True), nullable=False, server_default=func.now())$/", "language": "Python", "kind": "variable", "scope": "NoteORM", "scopeKind": "class"}, {"_type": "tag", "name": "created_at", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-10316-10336/notes_backend/src/api/main.py", "pattern": "/^    created_at: Optional[str] = Field(None, description=\"Creation timestamp (ISO 8601)\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "NoteOut", "scopeKind": "class"}, {"_type": "tag", "name": "delete_note", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-10316-10336/notes_backend/src/api/main.py", "pattern": "/^def delete_note($/", "language": "Python", "kind": "function", "signature": "( note_id: int = Path(..., ge=1, description=\"Note ID\"), db: Session = Depends(get_db), )"}, {"_type": "tag", "name": "engine", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-10316-10336/notes_backend/src/api/main.py", "pattern": "/^engine = create_engine($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "from_orm_note", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-10316-10336/notes_backend/src/api/main.py", "pattern": "/^    def from_orm_note(cls, orm: NoteORM) -> \"NoteOut\":$/", "language": "Python", "typeref": "typename:\"NoteOut\"", "kind": "member", "signature": "(cls, orm: NoteORM)", "scope": "NoteOut", "scopeKind": "class"}, {"_type": "tag", "name": "from_tags_str", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-10316-10336/notes_backend/src/api/main.py", "pattern": "/^    def from_tags_str(tags_str: Optional[str]) -> Optional[List[str]]:$/", "language": "Python", "typeref": "typename:Optional[List[str]]", "kind": "member", "signature": "(tags_str: Optional[str])", "scope": "NoteBase", "scopeKind": "class"}, {"_type": "tag", "name": "get_db", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-10316-10336/notes_backend/src/api/main.py", "pattern": "/^def get_db():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_note", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-10316-10336/notes_backend/src/api/main.py", "pattern": "/^def get_note($/", "language": "Python", "typeref": "typename:NoteOut", "kind": "function", "signature": "( note_id: int = Path(..., ge=1, description=\"Note ID\"), db: Session = Depends(get_db), )"}, {"_type": "tag", "name": "health_check", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-10316-10336/notes_backend/src/api/main.py", "pattern": "/^def health_check():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-10316-10336/notes_backend/src/api/main.py", "pattern": "/^    id = Column(Integer, primary_key=True, index=True)$/", "language": "Python", "kind": "variable", "scope": "NoteORM", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-10316-10336/notes_backend/src/api/main.py", "pattern": "/^    id: int = Field(..., description=\"Unique identifier of the note\")$/", "language": "Python", "typeref": "typename:int", "kind": "variable", "scope": "NoteOut", "scopeKind": "class"}, {"_type": "tag", "name": "list_notes", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-10316-10336/notes_backend/src/api/main.py", "pattern": "/^def list_notes($/", "language": "Python", "typeref": "typename:List[NoteOut]", "kind": "function", "signature": "( db: Session = Depends(get_db), q: Optional[str] = Query(default=None, description=\"Search by title/content substring\"), tag: Optional[str] = Query(default=None, description=\"Filter by a single tag\"), skip: int = Query(default=0, ge=0, description=\"Pagination offset\"), limit: int = Query(default=50, ge=1, le=200, description=\"Pagination limit\"), )"}, {"_type": "tag", "name": "openapi_tags", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-10316-10336/notes_backend/src/api/main.py", "pattern": "/^openapi_tags = [$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "tags", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-10316-10336/notes_backend/src/api/main.py", "pattern": "/^    tags = Column(String(512), nullable=True)  # Comma-separated tags$/", "language": "Python", "kind": "variable", "scope": "NoteORM", "scopeKind": "class"}, {"_type": "tag", "name": "tags", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-10316-10336/notes_backend/src/api/main.py", "pattern": "/^    tags: Optional[List[str]] = Field(default=None, description=\"List of tags for the note\")$/", "language": "Python", "typeref": "typename:Optional[List[str]]", "kind": "variable", "scope": "NoteBase", "scopeKind": "class"}, {"_type": "tag", "name": "tags", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-10316-10336/notes_backend/src/api/main.py", "pattern": "/^    tags: Optional[List[str]] = Field(default=None, description=\"New tags list (replaces existin/", "language": "Python", "typeref": "typename:Optional[List[str]]", "kind": "variable", "scope": "NoteUpdate", "scopeKind": "class"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-10316-10336/notes_backend/src/api/main.py", "pattern": "/^    title = Column(String(255), nullable=False, index=True)$/", "language": "Python", "kind": "variable", "scope": "NoteORM", "scopeKind": "class"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-10316-10336/notes_backend/src/api/main.py", "pattern": "/^    title: Optional[str] = Field(None, description=\"New title\", min_length=1, max_length=255)$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "NoteUpdate", "scopeKind": "class"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-10316-10336/notes_backend/src/api/main.py", "pattern": "/^    title: str = Field(..., description=\"Title of the note\", min_length=1, max_length=255)$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "NoteBase", "scopeKind": "class"}, {"_type": "tag", "name": "to_tags_str", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-10316-10336/notes_backend/src/api/main.py", "pattern": "/^    def to_tags_str(self) -> Optional[str]:$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "member", "signature": "(self)", "scope": "NoteBase", "scopeKind": "class"}, {"_type": "tag", "name": "update_note", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-10316-10336/notes_backend/src/api/main.py", "pattern": "/^def update_note($/", "language": "Python", "typeref": "typename:NoteOut", "kind": "function", "signature": "( note_id: int = Path(..., ge=1, description=\"Note ID\"), payload: NoteUpdate = ..., db: Session = Depends(get_db), )"}, {"_type": "tag", "name": "updated_at", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-10316-10336/notes_backend/src/api/main.py", "pattern": "/^    updated_at = Column(DateTime(timezone=True), nullable=False, server_default=func.now(), onup/", "language": "Python", "kind": "variable", "scope": "NoteORM", "scopeKind": "class"}, {"_type": "tag", "name": "updated_at", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-10316-10336/notes_backend/src/api/main.py", "pattern": "/^    updated_at: Optional[str] = Field(None, description=\"Last update timestamp (ISO 8601)\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "NoteOut", "scopeKind": "class"}], "hash": "f6c6238db9324b68f375cd1d42708008", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/api/main.py", "fields": [{"name": "Base = declarative_base()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "DB_URL = os.getenv(\"NOTES_DB_URL\") or os.getenv(\"DATABASE_URL\") or \"sqlite:\\/\\/\\/.\\/notes.db\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine, future=True)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "__tablename__ = \"notes\"", "scope": "NoteORM", "scopeKind": "class", "description": "unavailable"}, {"name": "allowed_origins = [o.strip() for o in (os.getenv(\"CORS_ALLOW_ORIGINS\") or \"*\").split(\",\")]", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "app = FastAPI(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "content = Column(Text, nullable=False, default=\"\")", "scope": "NoteORM", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] content", "scope": "NoteUpdate", "scopeKind": "class", "description": "unavailable"}, {"name": "str content", "scope": "NoteBase", "scopeKind": "class", "description": "unavailable"}, {"name": "created_at = Column(DateTime(timezone=True), nullable=False, server_default=func.now())", "scope": "NoteORM", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] created_at", "scope": "NoteOut", "scopeKind": "class", "description": "unavailable"}, {"name": "engine = create_engine(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "id = Column(Integer, primary_key=True, index=True)", "scope": "NoteORM", "scopeKind": "class", "description": "unavailable"}, {"name": "int id", "scope": "NoteOut", "scopeKind": "class", "description": "unavailable"}, {"name": "openapi_tags = [", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "tags = Column(String(512), nullable=True)  # Comma-separated tags", "scope": "NoteORM", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[List[str]] tags", "scope": "NoteBase", "scopeKind": "class", "description": "unavailable"}, {"name": "title = Column(String(255), nullable=False, index=True)", "scope": "NoteORM", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] title", "scope": "NoteUpdate", "scopeKind": "class", "description": "unavailable"}, {"name": "str title", "scope": "NoteBase", "scopeKind": "class", "description": "unavailable"}, {"name": "updated_at = Column(DateTime(timezone=True), nullable=False, server_default=func.now(), onup/", "scope": "NoteORM", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] updated_at", "scope": "NoteOut", "scopeKind": "class", "description": "unavailable"}]}